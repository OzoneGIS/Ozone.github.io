{"version":3,"file":"ref.js","sourceRoot":"","sources":["../../../../src/storage/ref.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,gBAAgB,EAAyB,MAAM,QAAQ,CAAC;AAEjE,OAAO,EAAE,IAAI,EAAE,MAAM,sBAAsB,CAAC;AAiB5C,MAAM,2BAA2B,GAAc;IAC7C,MAAM,CAAC;QACL,cAAc,EAAE,MAAM,IAAI,CAAC,GAAG,CAAC,cAAc,EAAE,CAAC;QAChD,WAAW,EAAE,MAAM,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE,CAAC;QAC1C,MAAM,EAAE,MAAM,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC;QAChC,KAAK,EAAE,CAAC,IAAY,KAAK,gBAAgB,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QAC1D,eAAe,EAAE,CAAC,IAAsB,KAAK,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;QAC3E,GAAG,EAAE,CAAC,IAAS,EAAE,QAAyB;YACxC,MAAM,IAAI,GAAG,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,QAAQ,CAAC,CAAC;YACrC,MAAM,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;SAC/B;QACD,SAAS,EAAE,CAAC,IAAY,EAAE,MAAqB,EAAE,QAAyB;YACxE,MAAM,IAAI,GAAG,GAAG,CAAC,SAAS,CAAC,IAAI,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAC;YACnD,MAAM,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;SAC/B;KACF,CAAC;CACH","sourcesContent":["import { SettableMetadata, UploadMetadata, Reference, StringFormat } from '@firebase/storage-types';\nimport { createUploadTask, AngularFireUploadTask } from './task';\nimport { Observable } from 'rxjs/Observable';\nimport { from } from 'rxjs/observable/from';\n\nexport interface AngularFireStorageReference {\n  getDownloadURL(): Observable<any>;\n  getMetadata(): Observable<any>;\n  delete(): Observable<any>;\n  child(path: string): any;\n  updateMetatdata(meta: SettableMetadata): Observable<any>;\n  put(data: any, metadata?: UploadMetadata | undefined): AngularFireUploadTask;\n  putString(data: string, format?: string | undefined, metadata?: UploadMetadata | undefined): AngularFireUploadTask;\n}\n\n/**\n * Create an AngularFire wrapped Storage Reference. This object\n * creates observable methods from promise based methods.\n * @param ref\n */\nexport function createStorageRef(ref: Reference): AngularFireStorageReference {\n  return {\n    getDownloadURL: () => from(ref.getDownloadURL()),\n    getMetadata: () => from(ref.getMetadata()),\n    delete: () => from(ref.delete()),\n    child: (path: string) => createStorageRef(ref.child(path)),\n    updateMetatdata: (meta: SettableMetadata) => from(ref.updateMetadata(meta)),\n    put: (data: any, metadata?: UploadMetadata) => {\n      const task = ref.put(data, metadata);\n      return createUploadTask(task);\n    },\n    putString: (data: string, format?: StringFormat, metadata?: UploadMetadata) => {\n      const task = ref.putString(data, format, metadata);\n      return createUploadTask(task);\n    }\n  };\n}\n"]}