{"version":3,"file":"firebase_object_factory.js","sourceRoot":"","sources":["../../../../src/database-deprecated/firebase_object_factory.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,wBAAwB,EAAE,MAAM,8BAA8B,CAAC;AACxE,OAAO,EAAE,aAAa,EAAE,MAAM,cAAc,CAAC;AAE7C,OAAO,EAAE,SAAS,EAAE,MAAM,yBAAyB,CAAC;AAEpD,OAAO,KAAK,KAAK,MAAM,SAAS,CAAC;AAGjC,MAAM,gCACJ,GAAsB,EACtB,EAAE,gBAAgB,KAAgC,EAAE;IAEpD,MAAM,gBAAgB,GAAG,IAAI,wBAAwB,CAAC,CAAC,GAAkB;QACvE,IAAI,EAAE,GAAG,GAAG,CAAC,EAAE,CAAC,OAAO,EAAE,CAAC,QAAsB;YAC9C,GAAG,CAAC,IAAI,CAAC,gBAAgB,GAAG,QAAQ,GAAG,KAAK,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAA;SACpE,EAAE,GAAG;YACJ,EAAE,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;gBAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;gBAAC,GAAG,CAAC,QAAQ,EAAE,CAAC;aAAE;SAC7C,CAAC,CAAC;QAEH,MAAM,CAAC,MAAM,GAAG,CAAC,GAAG,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;KACnC,EAAE,GAAG,CAAC,CAAC;IAGR,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,gBAAgB,EAAE,IAAI,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;CAC1E","sourcesContent":["import { FirebaseObjectObservable } from './firebase_object_observable';\nimport { ZoneScheduler } from 'angularfire2';\nimport { Observer } from 'rxjs/Observer';\nimport { observeOn } from 'rxjs/operator/observeOn';\nimport { DataSnapshot } from '@firebase/database-types';\nimport * as utils from './utils';\nimport { FirebaseObjectFactoryOpts, DatabaseReference } from './interfaces';\n\nexport function FirebaseObjectFactory (\n  ref: DatabaseReference,\n  { preserveSnapshot }: FirebaseObjectFactoryOpts = {}): FirebaseObjectObservable<any> {\n\n  const objectObservable = new FirebaseObjectObservable((obs: Observer<any>) => {\n    let fn = ref.on('value', (snapshot: DataSnapshot) => {\n      obs.next(preserveSnapshot ? snapshot : utils.unwrapMapFn(snapshot))\n    }, err => {\n      if (err) { obs.error(err); obs.complete(); }\n    });\n\n    return () => ref.off('value', fn);\n  }, ref);\n\n  // TODO: should be in the subscription zone instead\n  return observeOn.call(objectObservable, new ZoneScheduler(Zone.current));\n}\n"]}