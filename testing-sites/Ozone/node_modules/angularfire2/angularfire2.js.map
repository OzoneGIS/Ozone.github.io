{"version":3,"file":"angularfire2.js","sourceRoot":"","sources":["../../src/core/angularfire2.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,sBAAsB,EAAE,WAAW,EAAE,mBAAmB,EAAE,MAAM,uBAAuB,CAAC;AACjG,OAAO,EAAc,cAAc,EAAE,QAAQ,EAAE,MAAM,eAAe,CAAC;AAGrE,OAAO,EAAE,KAAK,EAAE,MAAM,sBAAsB,CAAC;AAW7C,IAAM,eAAe,GAAG,IAAI,cAAc,CAAS,iBAAiB,CAAC,CAAC;AAEtE,MAAM,CAAC,IAAM,mBAAmB,GAAG;IACjC,OAAO,EAAE,WAAW;IACpB,UAAU,EAAE,mBAAmB;IAC/B,IAAI,EAAE,CAAE,sBAAsB,EAAE,eAAe,CAAE;CAClD,CAAC;;;;IAMO,+BAAa,GAApB,UAAqB,MAAyB,EAAE,OAAgB;QAC9D,MAAM,CAAC;YACL,QAAQ,EAAE,iBAAiB;YAC3B,SAAS,EAAE;gBACT,EAAE,OAAO,EAAE,sBAAsB,EAAE,QAAQ,EAAE,MAAM,EAAE;gBACrD,EAAE,OAAO,EAAE,eAAe,EAAE,QAAQ,EAAE,OAAO,EAAE;aAChD;SACF,CAAA;KACF;;gBAZF,QAAQ,SAAC;oBACR,SAAS,EAAE,CAAE,mBAAmB,CAAE;iBACnC;;;4BAzBD;;SA0Ba,iBAAiB;AAgB9B,IAAA;IAGE,uBAAmB,IAAS;QAAT,SAAI,GAAJ,IAAI,CAAK;KAAI;IAEhC,gCAAQ,GAAR;QAAS,cAAc;aAAd,UAAc,EAAd,qBAAc,EAAd,IAAc;YAAd,yBAAc;;QACrB,MAAM,CAAe,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,cAAM,OAAA,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,EAAE,IAAI,CAAC,EAAjC,CAAiC,CAAC,CAAC;KAC7E;wBAjDH;IAkDC,CAAA;AARD,yBAQC;AAED,OAAO,EAAE,WAAW,EAAE,eAAe,EAAE,sBAAsB,EAAE,CAAC","sourcesContent":["import { FirebaseAppConfigToken, FirebaseApp, _firebaseAppFactory } from './firebase.app.module';\nimport { Injectable, InjectionToken, NgModule } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\nimport { Scheduler } from 'rxjs/Scheduler';\nimport { queue } from 'rxjs/scheduler/queue';\n\nexport interface FirebaseAppConfig {\n  apiKey?: string;\n  authDomain?: string;\n  databaseURL?: string;\n  storageBucket?: string;\n  messagingSenderId?: string;\n  projectId?: string;\n}\n\nconst FirebaseAppName = new InjectionToken<string>('FirebaseAppName');\n\nexport const FirebaseAppProvider = {\n  provide: FirebaseApp,\n  useFactory: _firebaseAppFactory,\n  deps: [ FirebaseAppConfigToken, FirebaseAppName ]\n};\n\n@NgModule({\n  providers: [ FirebaseAppProvider ],\n})\nexport class AngularFireModule {\n  static initializeApp(config: FirebaseAppConfig, appName?: string) {\n    return {\n      ngModule: AngularFireModule,\n      providers: [\n        { provide: FirebaseAppConfigToken, useValue: config },\n        { provide: FirebaseAppName, useValue: appName }\n      ]\n    }\n  }\n}\n\n/**\n * TODO: remove this scheduler once Rx has a more robust story for working\n * with zones.\n */\nexport class ZoneScheduler {\n\n  // TODO: Correctly add ambient zone typings instead of using any.\n  constructor(public zone: any) {}\n\n  schedule(...args: any[]): Subscription {\n    return <Subscription>this.zone.run(() => queue.schedule.apply(queue, args));\n  }\n}\n\nexport { FirebaseApp, FirebaseAppName, FirebaseAppConfigToken };\n"]}